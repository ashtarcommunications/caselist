-- MySQL Script generated by MySQL Workbench
-- Sat 23 Nov 2024 08:17:44 AM MST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema caselist
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema caselist
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `caselist` ;
USE `caselist` ;

-- -----------------------------------------------------
-- Table `caselist`.`caselists`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`caselists` ;

CREATE TABLE IF NOT EXISTS `caselist`.`caselists` (
  `caselist_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `display_name` VARCHAR(127) NOT NULL,
  `year` INT NOT NULL,
  `event` VARCHAR(32) NULL,
  `level` VARCHAR(32) NULL COMMENT 'One of \"hs\" or \"college\"',
  `team_size` INT NULL,
  `archived` TINYINT(1) NULL DEFAULT 0,
  `archive_url` VARCHAR(255) NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`caselist_id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`schools`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`schools` ;

CREATE TABLE IF NOT EXISTS `caselist`.`schools` (
  `school_id` INT NOT NULL AUTO_INCREMENT,
  `caselist_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NULL,
  `state` VARCHAR(2) NULL,
  `chapter_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`school_id`),
  INDEX `school_fk_wiki_idx` (`caselist_id` ASC),
  UNIQUE INDEX `school_caselist_uq` (`caselist_id` ASC, `name` ASC),
  CONSTRAINT `school_fk_caselist`
    FOREIGN KEY (`caselist_id`)
    REFERENCES `caselist`.`caselists` (`caselist_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`teams` ;

CREATE TABLE IF NOT EXISTS `caselist`.`teams` (
  `team_id` INT NOT NULL AUTO_INCREMENT,
  `school_id` INT NOT NULL,
  `name` VARCHAR(32) NOT NULL,
  `display_name` VARCHAR(255) NOT NULL,
  `notes` LONGTEXT NULL,
  `debater1_first` VARCHAR(255) NULL,
  `debater1_last` VARCHAR(255) NULL,
  `debater1_student_id` INT NULL,
  `debater2_first` VARCHAR(255) NULL,
  `debater2_last` VARCHAR(255) NULL,
  `debater2_student_id` INT NULL,
  `debater3_first` VARCHAR(255) NULL,
  `debater3_last` VARCHAR(255) NULL,
  `debater3_student_id` INT NULL,
  `debater4_first` VARCHAR(255) NULL,
  `debater4_last` VARCHAR(255) NULL,
  `debater4_student_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`team_id`),
  UNIQUE INDEX `team_school_code_uq` (`school_id` ASC, `name` ASC),
  CONSTRAINT `team_fk_school`
    FOREIGN KEY (`school_id`)
    REFERENCES `caselist`.`schools` (`school_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`rounds`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`rounds` ;

CREATE TABLE IF NOT EXISTS `caselist`.`rounds` (
  `round_id` INT NOT NULL AUTO_INCREMENT,
  `team_id` INT NOT NULL,
  `side` VARCHAR(1) NOT NULL,
  `tournament` VARCHAR(255) NOT NULL,
  `round` VARCHAR(32) NOT NULL,
  `opponent` VARCHAR(255) NULL,
  `judge` VARCHAR(255) NULL,
  `report` LONGTEXT NULL,
  `opensource` VARCHAR(255) NULL,
  `video` VARCHAR(255) NULL,
  `tourn_id` INT NULL,
  `external_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`round_id`),
  INDEX `round_fk_team_idx` (`team_id` ASC),
  INDEX `idx_rounds_tournament` (`tournament` ASC),
  CONSTRAINT `round_fk_team`
    FOREIGN KEY (`team_id`)
    REFERENCES `caselist`.`teams` (`team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`cites`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`cites` ;

CREATE TABLE IF NOT EXISTS `caselist`.`cites` (
  `cite_id` INT NOT NULL AUTO_INCREMENT,
  `round_id` INT NOT NULL,
  `title` VARCHAR(127) NULL,
  `cites` LONGTEXT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`cite_id`),
  INDEX `cite_fk_round_idx` (`round_id` ASC),
  INDEX `idx_cites_title` (`title` ASC),
  CONSTRAINT `cite_fk_round`
    FOREIGN KEY (`round_id`)
    REFERENCES `caselist`.`rounds` (`round_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`users` ;

CREATE TABLE IF NOT EXISTS `caselist`.`users` (
  `user_id` INT NOT NULL,
  `email` VARCHAR(255) NULL,
  `display_name` VARCHAR(255) NULL,
  `trusted` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `caselist`.`sessions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`sessions` ;

CREATE TABLE IF NOT EXISTS `caselist`.`sessions` (
  `session_id` INT NOT NULL AUTO_INCREMENT,
  `token` VARCHAR(128) NOT NULL,
  `user_id` INT NOT NULL,
  `ip` VARCHAR(63) NULL,
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `expires_at` TIMESTAMP NULL,
  PRIMARY KEY (`session_id`),
  INDEX `sessions_fk_users_idx` (`user_id` ASC),
  INDEX `idx_sessions_token` (`token` ASC),
  CONSTRAINT `sessions_fk_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `caselist`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`openev`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`openev` ;

CREATE TABLE IF NOT EXISTS `caselist`.`openev` (
  `openev_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `path` VARCHAR(255) NOT NULL,
  `year` INT NOT NULL,
  `camp` VARCHAR(64) NOT NULL,
  `lab` VARCHAR(32) NULL,
  `tags` JSON NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  PRIMARY KEY (`openev_id`),
  UNIQUE INDEX `path_UNIQUE` (`path` ASC),
  INDEX `openev_year` (`year` ASC),
  INDEX `openev_camp` (`camp` ASC))
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`event_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`event_log` ;

CREATE TABLE IF NOT EXISTS `caselist`.`event_log` (
  `event_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NULL,
  `tag` VARCHAR(63) NOT NULL,
  `description` VARCHAR(255) NULL,
  `school_id` INT NULL,
  `team_id` INT NULL,
  `round_id` INT NULL,
  `cite_id` INT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`event_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 1000;


-- -----------------------------------------------------
-- Table `caselist`.`cites_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`cites_history` ;

CREATE TABLE IF NOT EXISTS `caselist`.`cites_history` (
  `cite_id` INT NOT NULL,
  `version` INT NOT NULL,
  `round_id` INT NOT NULL,
  `title` VARCHAR(127) NULL,
  `cites` LONGTEXT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  `event` VARCHAR(63) NULL,
  PRIMARY KEY (`cite_id`, `version`),
  INDEX `idx_cites_history_round_id` (`round_id` ASC),
  INDEX `idx_cites_history_title` (`title` ASC));


-- -----------------------------------------------------
-- Table `caselist`.`rounds_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`rounds_history` ;

CREATE TABLE IF NOT EXISTS `caselist`.`rounds_history` (
  `round_id` INT NOT NULL,
  `version` INT NOT NULL,
  `team_id` INT NOT NULL,
  `side` VARCHAR(1) NOT NULL,
  `tournament` VARCHAR(255) NOT NULL,
  `round` VARCHAR(32) NOT NULL,
  `opponent` VARCHAR(255) NULL,
  `judge` VARCHAR(255) NULL,
  `report` LONGTEXT NULL,
  `opensource` VARCHAR(255) NULL,
  `video` VARCHAR(255) NULL,
  `tourn_id` INT NULL,
  `external_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  `event` VARCHAR(63) NULL,
  PRIMARY KEY (`round_id`, `version`),
  INDEX `idx_rounds_history_team_id` (`team_id` ASC),
  INDEX `idx_rounds_history_tournament` (`tournament` ASC));


-- -----------------------------------------------------
-- Table `caselist`.`schools_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`schools_history` ;

CREATE TABLE IF NOT EXISTS `caselist`.`schools_history` (
  `school_id` INT NOT NULL,
  `version` INT NOT NULL,
  `caselist_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NULL,
  `state` VARCHAR(2) NULL,
  `chapter_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  `event` VARCHAR(63) NULL,
  PRIMARY KEY (`school_id`, `version`),
  INDEX `idx_schools_history_caselist_id` (`caselist_id` ASC));


-- -----------------------------------------------------
-- Table `caselist`.`teams_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `caselist`.`teams_history` ;

CREATE TABLE IF NOT EXISTS `caselist`.`teams_history` (
  `team_id` INT NOT NULL,
  `version` INT NOT NULL,
  `school_id` INT NOT NULL,
  `name` VARCHAR(32) NOT NULL,
  `display_name` VARCHAR(255) NOT NULL,
  `notes` LONGTEXT NULL,
  `debater1_first` VARCHAR(255) NULL,
  `debater1_last` VARCHAR(255) NOT NULL,
  `debater1_student_id` INT NULL,
  `debater2_first` VARCHAR(255) NULL,
  `debater2_last` VARCHAR(255) NULL,
  `debater2_student_id` INT NULL,
  `debater3_first` VARCHAR(255) NULL,
  `debater3_last` VARCHAR(255) NULL,
  `debater3_student_id` INT NULL,
  `debater4_first` VARCHAR(255) NULL,
  `debater4_last` VARCHAR(255) NULL,
  `debater4_student_id` INT NULL,
  `created_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  `created_by_id` INT NULL,
  `updated_at` DATETIME NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `updated_by_id` INT NULL,
  `event` VARCHAR(63) NULL,
  PRIMARY KEY (`team_id`, `debater1_last`, `version`),
  INDEX `idx_teams_history_school_id` (`school_id` ASC));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
